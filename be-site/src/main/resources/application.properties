server.port=8088
server.servlet.context-path=/be
spring.application.name=back-office
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.auth-server-url}/realms/Yas
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/interview_management
spring.datasource.username=admin
spring.datasource.password=admin

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (none, create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = none

#Enable liquibase
spring.liquibase.enabled=true

#keycloak
keycloak.auth-server-url=http://localhost:8080
keycloak.realm=Yas
keycloak.resource=customer-management
keycloak.credentials.secret=NKAr3rnjwm9jlakgKpelukZGFaHYqIWE

# swagger-ui custom path
#springdoc.swagger-ui.path=/swagger-ui
#springdoc.packagesToScan=com.yas.customer
#springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
#springdoc.swagger-ui.oauth.client-id=swagger-ui
#springdoc.oauthflow.authorization-url=http://identity/realms/Yas/protocol/openid-connect/auth
#springdoc.oauthflow.token-url=http://identity/realms/Yas/protocol/openid-connect/token