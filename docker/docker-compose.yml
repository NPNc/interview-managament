version: "3.9"

services:
  identity:
    image: quay.io/keycloak/keycloak:21.0.2
    command: [ 'start-dev --import-realm' ]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_PROXY: passthrough
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_HTTP_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - ../doc/init-project/keycloak-identity/realm-export.json:/opt/keycloak/data/import/realm-export.json
    #      - ./identity/themes/yas/theme:/opt/keycloak/themes
    networks:
      - yas-network

  #  customer:
  #    build: ./be-site
  #    image: ghcr.io/nashtech-garage/yas-customer:latest
  #    environment:
  #      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/customer
  #      - SERVER_SERVLET_CONTEXT_PATH=/customer
  #      - YAS_SERVICES_LOCATION
  #      - SERVER_PORT
  #      - LOGGING_CONFIG
  #      - JAVA_TOOL_OPTIONS
  #      - OTEL_EXPORTER_OTLP_ENDPOINT
  #      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
  #      - OTEL_RESOURCE_ATTRIBUTES
  #      - OTEL_SERVICE_NAME=customer-service
  #      - OTEL_LOGS_EXPORTER
  #      - OTEL_TRACES_EXPORTER
  #      - OTEL_METRICS_EXPORTER
  #      - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED
  #      - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
  #      - OTEL_JAVAAGENT_LOGGING
  #      - OTEL_JAVAAGENT_ENABLED
  #      - OTEL_JAVAAGENT_DEBUG
  #    volumes:
  ##      - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
  #      - ./deployment/app-config:/app-config
  #    networks:
  #      - yas-network

  postgres:
    image: debezium/postgres:15-alpine-custom
    build: ../doc/init-project/postgres
    hostname: ${POSTGRES_HOST}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ../doc/init-project/postgres/postgresql.conf.sample:/usr/share/postgresql/postgresql.conf.sample
      - ../doc/init-project/postgres/postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql
      - postgres:/var/lib/postgresql/data
    command: postgres -c 'max_connections=500'
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    networks:
      - yas-network

networks:
  yas-network:
    driver: bridge
    name: yas-network

volumes:
  postgres:
  pgadmin: